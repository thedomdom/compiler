###############################################################################
# Project:  COCKTAIL training
# Descr:    LR parser and AST definition and construction
# Kind:     README
# Author:   Prof. Dr. Juergen Vollmer <vollmer@dhbw-karlsruhe.de>
# $Id: README,v 1.10 2011/05/19 11:49:29 vollmer Exp $
###############################################################################

This directory describes the implementation of an LR parser for
arithmetic expressions. The Abstract Syntax Tree is constructed and traversed.
The AST is constructed using the Cocktail toos ast

The files:
	expr.pars	The parser specification (stub)
	expr.ast        The AST specification (stub)
	main.c          C-main program
	test*           Some test sources
	expr-ast	the executable to be produced
	Makefile
	README

	expr-solution.ast
	expr-solution.pars

Exercises:
  - Extend the definition and construction of the AST
  - Add computation of the "Tree" Attribute to all grammar rules.
  - Add grammar and tree construction rules to construct an AST for
    "sin()", "cos()", and "tan()" (see expr.ast)
    Add a grammar and evaluation rule for the constant    "pi"
  - Add more test sources to test your grammar

